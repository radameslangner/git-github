--------- COMANDOS  ---------

    Instalação
sudo dnf install git

╰─ git --version

    Configura name email

╰─ git config --global user.name "Radames Langner"
╰─ git config --global user.email radahmes@gmail.com


    Define editor
╰─ git config --global core.editor 'code --wait'

╰─ git config --global -e ( abre arquivo de configuração do git)



╰─ git config --list ( lista configurações do git)

!!! create repositorio

cria a pasta que deseja cirar pelo sistema ou pelo prompt ou terminal
Dentro da pasta que criada e que se deseja iniciar ,  com o comando :

    Inicia - cria arquivo .git - se inicia a pasta
╰─ git init


tecla ' q ' sai


╰─ git status

╰─ git add nomedoarquivo ( adiciona arquivo a staging area )

╰─ git add -A (adiciona todos na staging area)

╰─ git add . ( adiciona a staging area só o que esta na pasta atual)

╰─ git add * ( add da pasta atua, não adicona os arquivos deletados  )


╰─ git reset nomedoarquivo ( remove da staging area )
╰─ git reset ( remove tudo da staging area )


COMMIT

╰─ git commit -m "Primeiro Commit" ( -m informar texto identificador do commit)
╰─ git commit -a -m "texto" ( -a para comitar tudo que está sendo minitorado mas sem add na staging area )


╰─ git status -s ( -s formato curto )
╰─ git status --long ( saída padrão )


Histórico

╰─ git log ( exibe histórico de commits )
╰─ git log -2 ( exibe histórico dos últimos 2 commits )
╰─ git log --oneline  ( exibe histórico dos commits resumidamente )
╰─ git log -2  --oneline  ( exibe histórico dos útimos 2 commits resumidamente )

q - sai

╰─ git reflog ( histórico armazenado na máquina )

    cria comit com nome de commit existente

╰─ git commit -a -C 0358f72 ( -C para informar commit existente )


╰─ git revert 730050b7 ( reverte commit pelo id do commit )

╰─ git revert HEAD  ( HEAD reverte o último commit )

╰─ git revert HEAD~2 ( HEAD~2 revertte segundo commit antes do HEAD )

╰─ git revert --hard HEAD~1 ( --hard apaga alterações junto com o commit )



╰─❯ git commit --amend -m "mensagem"

╰─❯ git commit --amend --no-edit ( altera o ultimo commit  )

╰─❯ git restore . ( desfaz todas alterações que não foram monitoradas commitadas )


Clonar ( com controle de versionamento )

abrir pasta pelo termina escolher modo ( https - ssh - GitHub CLI)


SSH ( mais facil e segue abaixo )
git clone git@github.com:radexRS/sinplus.git


Arquivo .zip não faz controle de versionamento

Criar repositório no github

Sincronisar diretorio criado no github com o diretorio logal

╰─❯ git remote add origem git@github.com:radexRS/git.gitgit


git branch

!!! Cuidado Atualizar o nome da branch principal de master para main

╰─ git branch -M main


Empura arquivos do diretório local para o remoto

PUSH

╰─❯ git push -u origin main








trackerar arquivos



git diff (mostra as alteraões por arquivo e linha de todos os arquivos modificados)

git diff --name-only (lista arquivos modificados só o nome)

git checkout HEAD --nomedoarquivo (remoove alterações feitas no arquivo )


git remote

gera chave publica privada

ssh-keygen -t rsa -b 4096 -C "radahmes@gmail.com"

comando de origem do repositorio
git remote add syslogin https://github.com/radexRS/syslogin.git



PS D:\GIT> cd .\syslogin\
PS D:\GIT\syslogin> git init
Initialized empty Git repository in D:/GIT/syslogin/.git/
PS D:\GIT\syslogin> git remote add origen https://github.com/radexRS/syslogin.git
PS D:\GIT\syslogin>
PS D:\GIT\syslogin> git remote -v
origen  https://github.com/radexRS/syslogin.git (fetch)
origen  https://github.com/radexRS/syslogin.git (push)
PS D:\GIT\syslogin>

git remote


git push -u syslogin master



PS D:\GIT\syslogin> git remote add syslogin https://github.com/radexRS/syslogin.git
PS D:\GIT\syslogin> git remote
origen
syslogin
PS D:\GIT\syslogin> git push -u syslogin master


https://github.com/radexRS/syslogin/pull/new/master

depois de fazer commit no repositorio local

git push syslogin  master (manda para o github)


hidden no git

criar arquivo na raiz do projeto nomeado como:

.gitignore

 listar o nome dos arquimos e ou diretorios  que não devem aparecer que vão ficar opcultos só no git


git reverse (revert o commit e não perde o que foi feito )

git revert --no-edit id do commit



 git pull syslogin master (pega alterações do remoto e atualiza no local )



git clone url que deseja clonar o projeto


fork

contribuir

etc etal